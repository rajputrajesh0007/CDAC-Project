[{"D:\\CDAC PG-DAC Kochi-2022\\Major_Project\\Final_One\\Do\\client\\src\\index.js":"1","D:\\CDAC PG-DAC Kochi-2022\\Major_Project\\Final_One\\Do\\client\\src\\components\\layout\\Footer.js":"2","D:\\CDAC PG-DAC Kochi-2022\\Major_Project\\Final_One\\Do\\client\\src\\components\\layout\\Dashboard.js":"3","D:\\CDAC PG-DAC Kochi-2022\\Major_Project\\Final_One\\Do\\client\\src\\components\\layout\\Navbar.js":"4","D:\\CDAC PG-DAC Kochi-2022\\Major_Project\\Final_One\\Do\\client\\src\\App.js":"5","D:\\CDAC PG-DAC Kochi-2022\\Major_Project\\Final_One\\Do\\client\\src\\components\\bloodbank\\Request.js":"6","D:\\CDAC PG-DAC Kochi-2022\\Major_Project\\Final_One\\Do\\client\\src\\components\\user\\UserDashboard.js":"7","D:\\CDAC PG-DAC Kochi-2022\\Major_Project\\Final_One\\Do\\client\\src\\components\\user\\UserRegister.js":"8","D:\\CDAC PG-DAC Kochi-2022\\Major_Project\\Final_One\\Do\\client\\src\\components\\user\\UserLogin.js":"9"},{"size":309,"mtime":1663697430000,"results":"10","hashOfConfig":"11"},{"size":179,"mtime":1663697840000,"results":"12","hashOfConfig":"11"},{"size":7571,"mtime":1664471158000,"results":"13","hashOfConfig":"11"},{"size":1841,"mtime":1664384686000,"results":"14","hashOfConfig":"11"},{"size":1717,"mtime":1664392422000,"results":"15","hashOfConfig":"11"},{"size":7369,"mtime":1664307774000,"results":"16","hashOfConfig":"11"},{"size":3879,"mtime":1664392370000,"results":"17","hashOfConfig":"11"},{"size":12233,"mtime":1664647890852,"results":"18","hashOfConfig":"11"},{"size":3263,"mtime":1664714163534,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1vgjw4r",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"22"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"32"},"D:\\CDAC PG-DAC Kochi-2022\\Major_Project\\Final_One\\Do\\client\\src\\index.js",[],["48","49"],"D:\\CDAC PG-DAC Kochi-2022\\Major_Project\\Final_One\\Do\\client\\src\\components\\layout\\Footer.js",[],["50","51"],"D:\\CDAC PG-DAC Kochi-2022\\Major_Project\\Final_One\\Do\\client\\src\\components\\layout\\Dashboard.js",["52"],"import React, { useEffect, useState } from \"react\";\nimport Axios from \"axios\";\nimport home from \"../../assets/img/home.jpg\";\n\n\nconst Dashboard = () => {\n  const [bloodTable, setbloodTable] = useState([]);\n  const [bloodCompatibilityTable, setbloodCompatabilityTable] = useState([])\n  const [campaignRequestTable, setCampaignRequestTable] = useState([])\n\n  const loadDataOnlyOnce = () => {\n    Axios.get(\"http://localhost:8080/rest/get_blood_stock\", (req, res) => { }).then(\n      (response) => {\n        setbloodTable(response.data.resultDetails);\n      }\n    );\n  }\n\n  const loadCampaignRequest = () => {\n    Axios.get(\"http://localhost:8080/rest/get_all_campaign_request_status_list\", (req, res) => { }).then(\n      (response) => {\n        let list = []\n        for (const iterator of response.data.resultDetails) {\n          if (iterator.status == \"Approved\") {\n            list.push(iterator)\n          }\n        }\n        setCampaignRequestTable(list);\n      }\n    );\n  }\n\n  const loadData = () => {\n    let list = [\n      {\n        \"blood_type\": \"A+\",\n        \"donate_blood_to\": \"A+ AB+\",\n        \"receive_blood_from\": \"A+ A- O+ O-\",\n        \"id\": 1\n      },\n      {\n        \"blood_type\": \"O+\",\n        \"donate_blood_to\": \"A+ O+ B+ AB+\",\n        \"receive_blood_from\": \"O+ O-\",\n        \"id\": 2\n      },\n      {\n        \"blood_type\": \"B+\",\n        \"donate_blood_to\": \"B+ AB+\",\n        \"receive_blood_from\": \"B+ B- O+ O-\",\n        \"id\": 3\n      },\n      {\n        \"blood_type\": \"AB+\",\n        \"donate_blood_to\": \"AB+\",\n        \"receive_blood_from\": \"Everyone\",\n        \"id\": 4\n      },\n      {\n        \"blood_type\": \"A-\",\n        \"donate_blood_to\": \"A+ A- AB+ AB-\",\n        \"receive_blood_from\": \"A- O-\",\n        \"id\": 5\n      },\n      {\n        \"blood_type\": \"O-\",\n        \"donate_blood_to\": \"Everyone\",\n        \"receive_blood_from\": \"O-\",\n        \"id\": 6\n      },\n      {\n        \"blood_type\": \"B-\",\n        \"donate_blood_to\": \"B- B+ AB+ AB-\",\n        \"receive_blood_from\": \"B- O-\",\n        \"id\": 7\n      },\n      {\n        \"blood_type\": \"AB-\",\n        \"donate_blood_to\": \"AB+ AB-\",\n        \"receive_blood_from\": \"AB- A- B- O-\",\n        \"id\": 8\n      }\n    ]\n    setbloodCompatabilityTable(list)\n  }\n\n  useEffect(() => {\n    loadCampaignRequest();\n    loadDataOnlyOnce();\n    loadData()\n  }, [])\n\n\n  return (\n    <div className=\"container bs-dash\">\n      <br></br>\n      <img src={home} alt=\"Home\" width=\"100%\" height=\"auto\" />\n      <hr></hr>\n      <h5>Campaigns</h5>\n      <hr></hr>\n      <div className=\"card\">\n        <div className=\"card-header\">\n          Blood Campaigns\n        </div>\n        <div className=\"card-body\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <div class=\"table-responsive-lg\">\n                <table className=\"table\">\n                  <thead>\n                    <tr>\n                      <th scope=\"col\">Campaign Name</th>\n                      <th scope=\"col\">Campaign Date</th>\n                      <th scope=\"col\">Campaign Venue</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {campaignRequestTable.map((val) => {\n                      return (\n                        <tr key={val.id}>\n                          <td>{val.campaign_name}</td>\n                          <td>{val.campaign_date}</td>\n                          <td>{val.campaign_venue}</td>\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <p></p>\n      <hr></hr>\n      <h5>Compatible bloods & Blood stocks</h5>\n      <hr></hr>\n      <div className=\"row\">\n        <div className=\"col-6\">\n          <div className=\"card\">\n            <div className=\"card-header\">\n              Compatible Blood Type Donar & Seeker\n            </div>\n            <div className=\"card-body\">\n              <div className=\"row\">\n                <div className=\"col-12\">\n                  <div class=\"table-responsive-lg\">\n                    <table className=\"table\">\n                      <thead>\n                        <tr>\n                          <th scope=\"col\">Blood Type</th>\n                          <th scope=\"col\">Donate Blood To</th>\n                          <th scope=\"col\">Receive Blood From</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {bloodCompatibilityTable.map((val) => {\n                          return (\n                            <tr key={val.id}>\n                              <td>{val.blood_type}</td>\n                              <td>{val.donate_blood_to}</td>\n                              <td>{val.receive_blood_from}</td>\n                            </tr>\n                          );\n                        })}\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-6\">\n          <div className=\"card\">\n            <div className=\"card-header\">\n              Blood Stock\n            </div>\n            <div className=\"card-body\">\n              <div className=\"row\">\n                <div className=\"col-12\">\n                  <div class=\"table-responsive-lg\">\n                    <table className=\"table\">\n                      <thead>\n                        <tr>\n                          <th scope=\"col\">Blood Group</th>\n                          <th scope=\"col\">Unit</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {bloodTable.map((val) => {\n                          return (\n                            <tr key={val.b_id}>\n                              <td>{val.blood_group}</td>\n                              <td>{val.unit}</td>\n                            </tr>\n                          );\n                        })}\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <hr></hr>\n      <h5>About Us</h5>\n      <p id=\"para\"> The purpose of E-Blood Seva project  is to develop a blood management information system to assist in the management of blood donor records and ease/or control the distribution of blood in various parts of the country basing on the demands.\n        The main objective of the study was to create electronic blood donor management information system in order to assist in the management of blood donor records, planning and share information in a more confidential, convenient and secure way using modern technology.\n        The system consists of process of managing the blood requirement of needy patients with free of cost. In this system if any patient come to our website and post the his/her requirement. (The requirement can be of Single time or recurring type.) After posting requirement the patient  it shows the result of in which he/she find blood  in government/private blood bank and same Donor can donate the blood in Nearest Blood Bank Available.\n        If the blood is not available in any of the blood bank then it gives result as a list containing name, contact number and address of donor matching with requirement and admin team and donors who match requirement get the text message of requirement in order to fulfil the requirement.</p>\n    </div>\n  );\n};\n\nexport default Dashboard;\n","D:\\CDAC PG-DAC Kochi-2022\\Major_Project\\Final_One\\Do\\client\\src\\components\\layout\\Navbar.js",["53","54"],"import React, { useState, useEffect } from \"react\";\nimport bdrop from \"../../assets/img/bdrop.png\";\nimport SearchPage from \"./SearchPage\";\n\nimport \"../../assets/css/Navbar.css\";\n\nconst Navbar = () => {\n  const [role, setRole] = useState(0)\n\n  useEffect(() => {\n    if (localStorage.getItem(\"role_id\")) {\n      setRole(localStorage.getItem(\"role_id\"))\n    }\n  }, [])\n\n  const handleLogout = () => {\n    localStorage.setItem(\"role_id\", 0)\n    localStorage.setItem(\"user_id\", 0)\n    window.location = \"/home\";\n  }\n\n  return (\n    <nav className=\"nav\">\n      <img src={bdrop} alt=\"bdroplogo\" />\n      <a href=\"#\">\n        E-BLOOD SEVA\n      </a>\n      {/* comman */}\n      {role === \"0\" ? <a href=\"/home\">HOME&nbsp;<i className=\"fa fa-home\"/></a> : null}\n      {role === \"0\" ? <a href=\"/login/usr\">LOGIN&nbsp;<i className=\"fa fa-sign-in\"/></a> : null}\n      {role === \"0\" ? <a href=\"/reg/usr\">REGISTER&nbsp;<i className=\"fa fa-user-plus\"/></a> : null}\n      {role === \"0\" ? <SearchPage /> : null}\n      {role === \"1\" || role === \"2\" ? <a href=\"/login/usr/dash\">DASHBOARD&nbsp;<i className=\"fa fa-tachometer\"/></a> : null}\n      {role === \"1\" || role === \"2\" ? <a href=\"/login/usr/req\">REQUEST&nbsp;<i className=\"fa fa-paper-plane\"/></a> : null}\n      {role === \"4\" ? <a href=\"/login/bbnk/dash\">DASHBOARD&nbsp;<i className=\"fa fa-tachometer\"/></a> : null}\n      {role === \"3\" ? <a href=\"/login/ngo/dash\">DASHBOARD&nbsp;<i className=\"fa fa-tachometer\"/></a> : null}\n      {role === \"3\" ? <a href=\"/login/ngo/campaign/req\">REQUEST&nbsp;<i className=\"fa fa-paper-plane\"/></a> : null}\n      {role === \"5\" ? <a href=\"/login/ngo/dash\">DASHBOARD&nbsp;<i className=\"fa fa-tachometer\"/></a> : null}\n      {role !== \"0\" ? <a href=\"#\" onClick={handleLogout}>LOGOUT&nbsp;<i className=\"fa fa-sign-out\"/></a> : null}\n    </nav>\n  );\n};\n\nexport default Navbar;\n",["55","56"],"D:\\CDAC PG-DAC Kochi-2022\\Major_Project\\Final_One\\Do\\client\\src\\App.js",[],["57","58"],"D:\\CDAC PG-DAC Kochi-2022\\Major_Project\\Final_One\\Do\\client\\src\\components\\bloodbank\\Request.js",["59","60","61","62"],"D:\\CDAC PG-DAC Kochi-2022\\Major_Project\\Final_One\\Do\\client\\src\\components\\user\\UserDashboard.js",["63","64","65","66"],"import React, { useEffect, useState } from \"react\";\nimport Axios from \"axios\";\nimport { Link, Route, Switch } from \"react-router-dom\";\nimport Request from \"../bloodbank/Request\";\n\nconst UserDashboard = () => {\n  var [requestTable, setRequestTable] = useState([])\n  var [requestHistoryTable, setRequestHistroryTable] = useState([])\n\n\n  const loadRequest = () => {\n    Axios.post(\"http://localhost:8080/rest/get_request_list\", {\n      user_id: localStorage.getItem(\"user_id\") === \"\" ? 0 : localStorage.getItem(\"user_id\"),\n    }).then((response) => {\n      if (response.data.resultCode === \"0\") {\n        setRequestTable(response.data.resultDetails)\n      }\n    });\n  }\n\n  const loadRequestHistory = () => {\n    Axios.post(\"http://localhost:8080/rest/get_request_history_list\", {\n      user_id: localStorage.getItem(\"user_id\") === \"\" ? 0 : localStorage.getItem(\"user_id\"),\n    }).then((response) => {\n      if (response.data.resultCode === \"0\") {\n        setRequestHistroryTable(response.data.resultDetails)\n      }\n    });\n  }\n\n  useEffect(() => {\n    loadRequest();\n    loadRequestHistory();\n  }, [])\n\n  return (\n    <div className=\"container bs-dash\">\n      <br></br>\n      <h5>User Requests</h5>\n      <hr></hr>\n      <div className=\"card\">\n        <div className=\"card-header\">\n          User Requests\n        </div>\n        <div className=\"card-body\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <div class=\"table-responsive-lg\">\n                <table className=\"table\">\n                  <thead>\n                    <tr>\n                      <th scope=\"col\">Blood Bank Name</th>\n                      <th scope=\"col\">Blood Group</th>\n                      <th scope=\"col\">Unit</th>\n                      <th scope=\"col\">Type</th>\n                      <th scope=\"col\">Status</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {requestTable.map((val) => {\n                      return (\n                        <tr key={val.request_id}>\n                          <td>{val.organization_name}</td>\n                          <td>{val.blood_group}</td>\n                          <td>{val.unit}</td>\n                          <td>{val.user_type}</td>\n                          <td>{val.status}</td>\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <p></p>\n      <div className=\"card\">\n        <div className=\"card-header\">\n          User Requests History\n        </div>\n        <div className=\"card-body\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <div class=\"table-responsive-lg\">\n                <table className=\"table\">\n                  <thead>\n                    <tr>\n                      <th scope=\"col\">Blood Bank Name</th>\n                      <th scope=\"col\">Blood Group</th>\n                      <th scope=\"col\">Unit</th>\n                      <th scope=\"col\">Type</th>\n                      <th scope=\"col\">Status</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {requestHistoryTable.map((val) => {\n                      return (\n                        <tr key={val.request_id}>\n                          <td>{val.organization_name}</td>\n                          <td>{val.blood_group}</td>\n                          <td>{val.unit}</td>\n                          <td>{val.user_type}</td>\n                          <td>{val.status}</td>\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default UserDashboard;\n",["67","68"],"D:\\CDAC PG-DAC Kochi-2022\\Major_Project\\Final_One\\Do\\client\\src\\components\\user\\UserRegister.js",["69","70"],"import React, { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\n\nconst UserRegister = () => {\n\n  var [roleList, setRoleList] = useState([]);\n  var [district, setDistrict] = useState([]);\n  var [taluka, setTaluka] = useState([]);\n  var [bloodGroup, setbloodGroup] = useState([]);\n  var [genderList, setGenderList] = useState([]);\n  const [showOrgnization, setShowOrgnization] = useState(false)\n  const [showAge, setShowAge] = useState(false)\n  const [showGender, setShowGender] = useState(false)\n  const [showBloodGroup, setShowBloodGroup] = useState(false)\n  const [valueDistrict, setValueDistrict] = useState(\"\");\n  const [valueTaluka, setValueTaluka] = useState(\"\");\n  const [value, setValue] = useState(\"\");\n  const [userUserName, setuserUserName] = useState(\"\");\n  const [userPassword, setuserPassword] = useState(\"\");\n  const [userFullName, setUserFullName] = useState(\"\");\n  const [userMobileNo, setUserMobileNo] = useState(\"\");\n  const [userEmail, setUserEmail] = useState(\"\");\n  const [userAddress, setUserAddress] = useState(\"\");\n  const [userGender, setUserGender] = useState(\"\");\n  const [userRole, setUserRole] = useState(\"\");\n  const [userAge, setUserAge] = useState(18);\n  const [userOrgnization, setUserOrgnization] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [showError, setShowError] = useState(false)\n\n  const handleChangeAge = (event) => {\n    const re = /^[0-9\\b]+$/;\n    if (event.target.value === '' || re.test(event.target.value)) {\n      setUserAge(event.target.value)\n    }\n  }\n\n  const handleChangeMobile = (event) => {\n    const re = /^[0-9\\b]+$/;\n    if (event.target.value === '' || re.test(event.target.value)) {\n      setUserMobileNo(event.target.value)\n    }\n  }\n\n  const handleChangeDistrict = (event) => {\n    setShowError(false)\n    setValueDistrict(event.target.value);\n    loadTaluka(event.target.value)\n  };\n\n  const handleChangeTaluka = (event) => {\n    setShowError(false)\n    setValueTaluka(event.target.value);\n  };\n\n  const handleChange = (event) => {\n    setShowError(false)\n    setValue(event.target.value);\n  };\n\n  const handleChangeRole = (event) => {\n    setShowError(false)\n    setUserRole(event.target.value)\n    if (event.target.value === \"3\" || event.target.value === \"4\") {\n      setShowOrgnization(true)\n      setShowGender(false)\n      setShowAge(false)\n      setShowBloodGroup(false)\n    } else {\n      setShowOrgnization(false)\n      setShowGender(true)\n      setShowAge(true)\n      setShowBloodGroup(true)\n    }\n  };\n\n  const handleChangeGender = (event) => {\n    setShowError(false)\n    setUserGender(event.target.value);\n  };\n\n  const loadBloodGroup = () => {\n    Axios.get(\"http://localhost:8080/rest/get_blood_grpup\", (req, res) => { }).then(\n      (response) => {\n        setbloodGroup(response.data.resultDetails);\n      }\n    );\n  }\n\n  const loadDistrict = () => {\n    Axios.get(\"http://localhost:8080/rest/get_district\", (req, res) => { }).then(\n      (response) => {\n        setDistrict(response.data.resultDetails);\n      }\n    );\n  }\n\n  const loadTaluka = (code) => {\n    Axios.get(\"http://localhost:8080/rest/get_taluka?id=\" + code, (req, res) => { }).then(\n      (response) => {\n        setTaluka(response.data.resultDetails);\n      }\n    );\n  }\n\n\n  const loadRole = (code) => {\n    Axios.get(\"http://localhost:8080/rest/get_role\", (req, res) => { }).then(\n      (response) => {\n        setRoleList(response.data.resultDetails);\n      }\n    );\n  }\n\n  const loadGender = (code) => {\n    Axios.get(\"http://localhost:8080/rest/get_gender\", (req, res) => { }).then(\n      (response) => {\n        setGenderList(response.data.resultDetails);\n      }\n    );\n  }\n\n  useEffect(() => {\n    loadGender();\n    loadRole();\n    loadDistrict();\n    loadBloodGroup();\n  }, [])\n\n  const submituserRegister = () => {\n    if (userRole === \"\" || userRole === \"6\") {\n      setShowError(true)\n      setErrorMessage(\"Please select user role\")\n    } else if (userUserName === \"\") {\n      setShowError(true)\n      setErrorMessage(\"Please enter user name\")\n    } else if (userPassword === \"\") {\n      setShowError(true)\n      setErrorMessage(\"Please enter password\")\n    } else if (userFullName === \"\") {\n      setShowError(true)\n      setErrorMessage(\"Please enter name\")\n    } else if (userMobileNo === \"\") {\n      setShowError(true)\n      setErrorMessage(\"Please enter mobile no\")\n    } else if (userEmail === \"\") {\n      setShowError(true)\n      setErrorMessage(\"Please enter email\")\n    } else if (userAddress === \"\") {\n      setShowError(true)\n      setErrorMessage(\"Please enter address\")\n    } else if ((userGender === \"\" || userGender === \"Select Gender\") && (userRole === \"1\" || userRole === \"2\")) {\n      setShowError(true)\n      setErrorMessage(\"Please select gender\")\n    } else if (userAge === \"\" && (userRole === \"1\" || userRole === \"2\")) {\n      setShowError(true)\n      setErrorMessage(\"Please enter age\")\n    } else if (district === \"\" || district === \"0\") {\n      setShowError(true)\n      setErrorMessage(\"Please select District\")\n    } else if (taluka === \"\") {\n      setShowError(true)\n      setErrorMessage(\"Please select Taluka\")\n    } else if ((value === \"\" || value === \"Select Blood Group\") && (userRole === \"1\" || userRole === \"2\")) {\n      setShowError(true)\n      setErrorMessage(\"Please select Blood group\")\n    } else {\n      if (userPassword.length < 8) {\n        setShowError(true)\n        setErrorMessage(\"Password must be 8-15 characters in length\")\n        return false\n      }\n      if (userMobileNo.length < 10) {\n        setShowError(true)\n        setErrorMessage(\"Please enter valid mobile no.\")\n        return false\n      }\n      if (!userMobileNo.match(/^\\d{10}$/)) {\n        setShowError(true)\n        setErrorMessage(\"Please enter valid mobile no.\")\n        return false\n      }\n      let regx = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/\n      if (!regx.test(userEmail)) {\n        setShowError(true)\n        setErrorMessage(\"Please enter valid email address.\")\n        return false\n      }\n      if (userAge < 18) {\n        setShowError(true)\n        setErrorMessage(\"Please enter valid age.\")\n      }\n      const regurl = \"http://localhost:8080/user/register\";\n      Axios.post(regurl, {\n        user_name: userUserName,\n        password: userPassword,\n        full_name: userFullName,\n        organization_name: userOrgnization,\n        email_id: userEmail,\n        mobile_no: userMobileNo,\n        user_age: userAge,\n        blood_group: value === \"\" ? \"AB-Ve\" : value,\n        address: userAddress,\n        gender: userGender === \"\" ? \"Male\" : userGender,\n        district_id: valueDistrict,\n        taluka_id: valueTaluka,\n        role: userRole === \"\" ? 1 : userRole\n      }).then((response) => {\n        if (response.data.resultCode === \"0\") {\n          window.location = \"/login/usr\";\n        } else {\n          setShowError(true)\n          setErrorMessage(response.data.resultDetails)\n        }\n      });\n    }\n  };\n\n  return (\n    <div className=\"container bs-dash\">\n      <br></br>\n      {showError ? <div className=\"row\">\n        <div className=\"col-3\"></div>\n        <div className=\"col-6\">\n          <div className=\"card\">\n            <div className=\"card-header\">\n              Alert\n            </div>\n            <div className=\"card-body\">\n              <div className=\"error\">\n                {errorMessage}\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-3\"></div>\n      </div> : null}\n      <p></p>\n      <div className=\"row\">\n        <div className=\"col-3\"></div>\n        <div className=\"col-6\">\n          <div className=\"card\">\n            <div className=\"card-header\">\n              Sign Up\n            </div>\n            <div className=\"card-body\">\n              <form>\n                <div>\n                  <select value={userRole} onChange={handleChangeRole} className=\"form-control\">\n                    {roleList.map((option) => (\n                      <option value={option.role_id}>{option.role_name}</option>\n                    ))}\n                  </select>\n                </div>\n                <p></p>\n                <div>\n                  <input type=\"text\" placeholder=\"User Name\" className=\"form-control\" name=\"username\" onChange={(e) => {\n                    setuserUserName(e.target.value);\n                  }} required></input>\n                </div>\n                <p></p>\n                <div>\n                  <input type=\"password\" placeholder=\"Password\" className=\"form-control\" name=\"password\" onChange={(e) => {\n                    setuserPassword(e.target.value);\n                  }} required></input>\n                </div>\n                <p></p>\n                <div>\n                  <input type=\"text\" placeholder=\"Full Name\" className=\"form-control\" name=\"fullname\" onChange={(e) => {\n                    setUserFullName(e.target.value);\n                  }} required></input>\n                </div>\n                <p></p>\n                {showOrgnization ? <div>\n                  <input type=\"text\" placeholder=\"Blood Bank / NGO\" className=\"form-control\" name=\"organization\" onChange={(e) => {\n                    setUserOrgnization(e.target.value);\n                  }} required></input>\n                </div> : null}\n                <p></p>\n                <div>\n                  <input type=\"text\" value={userMobileNo} onChange={handleChangeMobile} placeholder=\"Mobile No\" className=\"form-control\" name=\"moblieno\" required maxLength={10}></input>\n                </div>\n                <p></p>\n                <div>\n                  <input type=\"text\" placeholder=\"Email\" className=\"form-control\" name=\"email\" onChange={(e) => {\n                    setUserEmail(e.target.value);\n                  }} required></input>\n                </div>\n                <p></p>\n                {showGender ? <div>\n                  <select value={userGender} onChange={handleChangeGender} className=\"form-control\">\n                    {genderList.map((option) => (\n                      <option value={option.name}>{option.name}</option>\n                    ))}\n                  </select>\n                </div> : null}\n                <p></p>\n                {showAge ? <div>\n                  <input type=\"text\" value={userAge} onChange={handleChangeAge} placeholder=\"Age\" className=\"form-control\" name=\"age\"\n                    required maxLength={3}></input>\n                </div> : null}\n                <p></p>\n                <div>\n                  <textarea type=\"text\" placeholder=\"Address\" className=\"form-control\" name=\"address\" onChange={(e) => {\n                    setUserAddress(e.target.value);\n                  }} required></textarea>\n                </div>\n                <p></p>\n                <div>\n                  <select value={valueDistrict} onChange={handleChangeDistrict} className=\"form-control\">\n                    {district.map((option) => (\n                      <option value={option.district_code}>{option.district_name}</option>\n                    ))}\n                  </select>\n                </div>\n                <p></p>\n                <div>\n                  <select value={valueTaluka} onChange={handleChangeTaluka} className=\"form-control\">\n                    {taluka.map((option) => (\n                      <option value={option.taluka_code}>{option.taluka_name}</option>\n                    ))}\n                  </select>\n                </div>\n                <p></p>\n                {showBloodGroup ? <div>\n                  <select value={value} onChange={handleChange} className=\"form-control\">\n                    {bloodGroup.map((option) => (\n                      <option value={option.blood_group_name}>{option.blood_group_name}</option>\n                    ))}\n                  </select>\n                </div> : null}\n              </form>\n            </div>\n            <div className=\"card-footer\">\n              <button className=\"btn btn-outline-danger btn-block\" onClick={submituserRegister}>Submit&nbsp; <i className=\"fa fa-user-plus\" /></button>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-3\"></div>\n      </div>\n    </div >\n  );\n};\n\nexport default UserRegister;\n","D:\\CDAC PG-DAC Kochi-2022\\Major_Project\\Final_One\\Do\\client\\src\\components\\user\\UserLogin.js",["71","72","73","74","75"],"import React, { useState } from \"react\";\nimport Axios from \"axios\";\n\nconst UserLogin = () => {\n  const [userUserName, setuserUserName] = useState(\"\");\n  const [userPassword, setuserPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [showError, setShowError] = useState(false)\n\n  const userLoginCheck = () => {\n    setShowError(false)\n    if (userUserName === \"\" || userPassword === \"\") {\n      setShowError(true)\n      setErrorMessage(\"Please provide user credentials\")\n      return false;\n    } else {\n      setShowError(false)\n      setErrorMessage(\"\")\n      Axios.post(\"http://localhost:8080/user/login\", {\n        user_name: userUserName,\n        password: userPassword,\n      }).then((response) => {\n        console.log(response)\n        if (response.data.resultCode === \"0\") {\n          let res = response.data.resultDetails\n          let role = res[0].role_id;\n          let user = res[0].user_id;\n          localStorage.setItem('role_id', role);\n          localStorage.setItem('user_id', user);\n          if (role == 1 || role == 2) {\n            window.location = \"/login/usr/dash\";\n          } else if (role == 4) {\n            window.location = \"/login/bbnk/dash\";\n          } else if (role == 3) {\n            window.location = \"/login/ngo/dash\";\n          } else if (role == 5) {\n            window.location = \"/login/admin/dash\";\n          }\n        } else {\n          setShowError(true)\n          setErrorMessage(response.data.resultDetails)\n        }\n      });\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <br></br>\n      {showError ? <div className=\"row\">\n        <div className=\"col-3\"></div>\n        <div className=\"col-6\">\n          <div className=\"card\">\n            <div className=\"card-header\">\n              Alert\n            </div>\n            <div className=\"card-body\">\n              <div className=\"error\">\n                {errorMessage}\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-3\"></div>\n      </div> : null}\n      <p></p>\n      <div className=\"row\">\n        <div className=\"col-3\"></div>\n        <div className=\"col-6\">\n          <div className=\"card\">\n            <div className=\"card-header\">\n              Sign In\n            </div>\n            <div className=\"card-body\">\n              <form>\n                <div>\n                  <input type=\"text\" placeholder=\"User Name\" className=\"form-control\" name=\"username\" onChange={(e) => {\n                    setuserUserName(e.target.value);\n                  }} required></input>\n                </div>\n                <p></p>\n                <div>\n                  <input type=\"password\" placeholder=\"Password\" className=\"form-control\" name=\"password\" onChange={(e) => {\n                    setuserPassword(e.target.value);\n                  }} required></input>\n                </div>\n              </form>\n            </div>\n            <div className=\"card-footer\">\n              <button className=\"btn btn-outline-danger btn-block\" onClick={userLoginCheck}>Login &nbsp;<i className=\"fa fa-sign-in\"></i></button>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-3\"></div>\n      </div>\n    </div>\n\n  );\n};\n\nexport default UserLogin;\n",{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"76","replacedBy":"80"},{"ruleId":"78","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":24,"column":31,"nodeType":"84","messageId":"85","endLine":24,"endColumn":33},{"ruleId":"86","severity":1,"message":"87","line":25,"column":7,"nodeType":"88","endLine":25,"endColumn":19},{"ruleId":"86","severity":1,"message":"87","line":39,"column":23,"nodeType":"88","endLine":39,"endColumn":58},{"ruleId":"76","replacedBy":"89"},{"ruleId":"78","replacedBy":"90"},{"ruleId":"76","replacedBy":"91"},{"ruleId":"78","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":3,"column":10,"nodeType":"95","messageId":"96","endLine":3,"endColumn":14},{"ruleId":"93","severity":1,"message":"97","line":3,"column":16,"nodeType":"95","messageId":"96","endLine":3,"endColumn":21},{"ruleId":"93","severity":1,"message":"98","line":3,"column":23,"nodeType":"95","messageId":"96","endLine":3,"endColumn":29},{"ruleId":"93","severity":1,"message":"99","line":4,"column":8,"nodeType":"95","messageId":"96","endLine":4,"endColumn":21},{"ruleId":"93","severity":1,"message":"94","line":3,"column":10,"nodeType":"95","messageId":"96","endLine":3,"endColumn":14},{"ruleId":"93","severity":1,"message":"97","line":3,"column":16,"nodeType":"95","messageId":"96","endLine":3,"endColumn":21},{"ruleId":"93","severity":1,"message":"98","line":3,"column":23,"nodeType":"95","messageId":"96","endLine":3,"endColumn":29},{"ruleId":"93","severity":1,"message":"100","line":4,"column":8,"nodeType":"95","messageId":"96","endLine":4,"endColumn":15},{"ruleId":"76","replacedBy":"101"},{"ruleId":"78","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":183,"column":25,"nodeType":"105","messageId":"106","endLine":183,"endColumn":26,"suggestions":"107"},{"ruleId":"103","severity":1,"message":"104","line":183,"column":41,"nodeType":"105","messageId":"106","endLine":183,"endColumn":42,"suggestions":"108"},{"ruleId":"82","severity":1,"message":"83","line":30,"column":20,"nodeType":"84","messageId":"85","endLine":30,"endColumn":22},{"ruleId":"82","severity":1,"message":"83","line":30,"column":33,"nodeType":"84","messageId":"85","endLine":30,"endColumn":35},{"ruleId":"82","severity":1,"message":"83","line":32,"column":27,"nodeType":"84","messageId":"85","endLine":32,"endColumn":29},{"ruleId":"82","severity":1,"message":"83","line":34,"column":27,"nodeType":"84","messageId":"85","endLine":34,"endColumn":29},{"ruleId":"82","severity":1,"message":"83","line":36,"column":27,"nodeType":"84","messageId":"85","endLine":36,"endColumn":29},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],["109"],["110"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["109"],["110"],["109"],["110"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Switch' is defined but never used.","'UserDashboard' is defined but never used.","'Request' is defined but never used.",["109"],["110"],"no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["111","112"],["113","114"],"no-global-assign","no-unsafe-negation",{"messageId":"115","fix":"116","desc":"117"},{"messageId":"118","fix":"119","desc":"120"},{"messageId":"115","fix":"121","desc":"117"},{"messageId":"118","fix":"122","desc":"120"},"removeEscape",{"range":"123","text":"124"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"125","text":"126"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"127","text":"124"},{"range":"128","text":"126"},[5843,5844],"",[5843,5843],"\\",[5859,5860],[5859,5859]]